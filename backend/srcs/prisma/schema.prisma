// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


//# ----------------------------- General_settings ----------------------------- #
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//# ----------------------------------- User ----------------------------------- #
model User {
  id          Int @id @default(autoincrement())
  username    String @unique
  avatar      String
  status      Int
  balance     Int
  hasBloqued  Bloqued[] @relation("user")
  isBloqued   Bloqued[] @relation("blocked")
}

model Bloqued {
  id          Int @id @default(autoincrement())
  user        User @relation("user", fields:[userId], references: [id])
  blocked     User @relation("blocked", fields:[blockedId], references: [id])
  userId      Int
  blockedId   Int
}

// model FriendShip {
//   id        Int @id @default(autoincrement())
//   user      User @relation(fields:[userOne, userTwo], references: [id])
//   userOne   Int
//   userTwo   Int
// }


// //# ----------------------------------- Match ---------------------------------- #
// model Match {
//   id        Int @id @default(autoincrement())
//   date      DateTime   @default(now())
//   duration  DateTime
//   user      User @relation(fields:[winner, userOne, userTwo], references: [id])
//   winner    Int
//   userOne   Int
//   userTwo   Int
// }

// model MatchList {
//   id      Int @id @default(autoincrement())
//   user    User @relation(fields:[userOne, userTwo], references: [id])
//   userOne Int
//   userTwo Int
//   match   Match @relation(fields:[matchId], references: [id])
//   matchId Int
// }

// //# ----------------------------------- Items ---------------------------------- #
// model Items {
//   id      Int @id @default(autoincrement())
//   name    String
//   price   Int
//   image   String
// }

// model userItems {
//   id      Int @id @default(autoincrement())
//   user    User @relation(fields:[userId], references:[id])
//   userId  Int
//   items   Items @relation(fields:[itemsId], references: [id])
//   itemsId Int
// }